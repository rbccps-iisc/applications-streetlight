/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Mon Aug  7 13:57:53 2017. */

#ifndef PB_MESSAGE_PB_H_INCLUDED
#define PB_MESSAGE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _sensor_values {
    int32_t ambient_lux;
    int32_t led_lux;
    int32_t power;
    int32_t temperature;
    int32_t batteryLevel;
/* @@protoc_insertion_point(struct:sensor_values) */
} sensor_values;

/* Default values for struct fields */

/* Initializer values for message structs */
#define sensor_values_init_default               {0, 0, 0, 0, 0}
#define sensor_values_init_zero                  {0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define sensor_values_ambient_lux_tag            1
#define sensor_values_led_lux_tag                2
#define sensor_values_power_tag                  3
#define sensor_values_temperature_tag            4
#define sensor_values_batteryLevel_tag           5

/* Struct field encoding specification for nanopb */
extern const pb_field_t sensor_values_fields[6];

/* Maximum encoded size of messages (where known) */
#define sensor_values_size                       55

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
