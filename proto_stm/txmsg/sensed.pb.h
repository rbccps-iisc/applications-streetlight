/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Mon Aug 21 15:40:50 2017. */

#ifndef PB_SENSED_PB_H_INCLUDED
#define PB_SENSED_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _sensor_values {
    int32_t dataSamplingInstant;
    bool has_caseTemperature;
    int32_t caseTemperature;
    bool has_powerConsumption;
    int32_t powerConsumption;
    bool has_luxOutput;
    int32_t luxOutput;
    bool has_ambientLux;
    int32_t ambientLux;
    bool has_batteryLevel;
    int32_t batteryLevel;
    bool has_slaveAlive;
    bool slaveAlive;
/* @@protoc_insertion_point(struct:sensor_values) */
} sensor_values;

/* Default values for struct fields */

/* Initializer values for message structs */
#define sensor_values_init_default               {0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define sensor_values_init_zero                  {0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define sensor_values_dataSamplingInstant_tag    1
#define sensor_values_caseTemperature_tag        2
#define sensor_values_powerConsumption_tag       3
#define sensor_values_luxOutput_tag              4
#define sensor_values_ambientLux_tag             5
#define sensor_values_batteryLevel_tag           6
#define sensor_values_slaveAlive_tag             7

/* Struct field encoding specification for nanopb */
extern const pb_field_t sensor_values_fields[8];

/* Maximum encoded size of messages (where known) */
#define sensor_values_size                       68

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SENSED_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
