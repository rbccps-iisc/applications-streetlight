/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Thu Aug 17 11:20:02 2017. */

#ifndef PB_ACTUATED_PB_H_INCLUDED
#define PB_ACTUATED_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _config_values_TargetControlPolicy {
    config_values_TargetControlPolicy_AUTO_LUX = 0,
    config_values_TargetControlPolicy_AUTO_TIMER = 1,
    config_values_TargetControlPolicy_MANUAL = 2
} config_values_TargetControlPolicy;
#define _config_values_TargetControlPolicy_MIN config_values_TargetControlPolicy_AUTO_LUX
#define _config_values_TargetControlPolicy_MAX config_values_TargetControlPolicy_MANUAL
#define _config_values_TargetControlPolicy_ARRAYSIZE ((config_values_TargetControlPolicy)(config_values_TargetControlPolicy_MANUAL+1))

/* Struct definitions */
typedef struct _config_values {
    bool targetPowerState;
    config_values_TargetControlPolicy targetControlPolicy;
/* @@protoc_insertion_point(struct:config_values) */
} config_values;

typedef struct _config_values_targetAutoLuxParams {
    bool has_targetOnLux;
    uint32_t targetOnLux;
    bool has_targetOffLux;
    uint32_t targetOffLux;
/* @@protoc_insertion_point(struct:config_values_targetAutoLuxParams) */
} config_values_targetAutoLuxParams;

typedef struct _config_values_targetAutoTimerParams {
    bool has_targetOnTime;
    uint64_t targetOnTime;
    bool has_targetOffTime;
    uint64_t targetOffTime;
/* @@protoc_insertion_point(struct:config_values_targetAutoTimerParams) */
} config_values_targetAutoTimerParams;

typedef struct _config_values_targetManualControlParams {
    bool has_targetBrightnessLevel;
    uint32_t targetBrightnessLevel;
/* @@protoc_insertion_point(struct:config_values_targetManualControlParams) */
} config_values_targetManualControlParams;

/* Default values for struct fields */

/* Initializer values for message structs */
#define config_values_init_default               {0, (config_values_TargetControlPolicy)0}
#define config_values_targetManualControlParams_init_default {false, 0}
#define config_values_targetAutoTimerParams_init_default {false, 0, false, 0}
#define config_values_targetAutoLuxParams_init_default {false, 0, false, 0}
#define config_values_init_zero                  {0, (config_values_TargetControlPolicy)0}
#define config_values_targetManualControlParams_init_zero {false, 0}
#define config_values_targetAutoTimerParams_init_zero {false, 0, false, 0}
#define config_values_targetAutoLuxParams_init_zero {false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define config_values_targetPowerState_tag       1
#define config_values_targetControlPolicy_tag    3
#define config_values_targetAutoLuxParams_targetOnLux_tag 6
#define config_values_targetAutoLuxParams_targetOffLux_tag 7
#define config_values_targetAutoTimerParams_targetOnTime_tag 4
#define config_values_targetAutoTimerParams_targetOffTime_tag 5
#define config_values_targetManualControlParams_targetBrightnessLevel_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t config_values_fields[3];
extern const pb_field_t config_values_targetManualControlParams_fields[2];
extern const pb_field_t config_values_targetAutoTimerParams_fields[3];
extern const pb_field_t config_values_targetAutoLuxParams_fields[3];

/* Maximum encoded size of messages (where known) */
#define config_values_size                       4
#define config_values_targetManualControlParams_size 6
#define config_values_targetAutoTimerParams_size 22
#define config_values_targetAutoLuxParams_size   12

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ACTUATED_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
