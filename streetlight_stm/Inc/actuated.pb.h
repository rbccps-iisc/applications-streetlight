/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Sun Aug 20 21:18:42 2017. */

#ifndef PB_ACTUATED_PB_H_INCLUDED
#define PB_ACTUATED_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum __controlPolicy {
    _controlPolicy_AUTO_LUX = 0,
    _controlPolicy_AUTO_TIMER = 1,
    _controlPolicy_MANUAL = 2
} _controlPolicy;
#define __controlPolicy_MIN _controlPolicy_AUTO_LUX
#define __controlPolicy_MAX _controlPolicy_MANUAL
#define __controlPolicy_ARRAYSIZE ((_controlPolicy)(_controlPolicy_MANUAL+1))

/* Struct definitions */
typedef struct _targetAutoLuxParams {
    bool has_targetOnLux;
    uint32_t targetOnLux;
    bool has_targetOffLux;
    uint32_t targetOffLux;
/* @@protoc_insertion_point(struct:targetAutoLuxParams) */
} targetAutoLuxParams;

typedef struct _targetAutoTimerParams {
    bool has_targetOnTime;
    uint64_t targetOnTime;
    bool has_targetOffTime;
    uint64_t targetOffTime;
/* @@protoc_insertion_point(struct:targetAutoTimerParams) */
} targetAutoTimerParams;

typedef struct _targetControlPolicy {
    _controlPolicy controlPolicy;
/* @@protoc_insertion_point(struct:targetControlPolicy) */
} targetControlPolicy;

typedef struct _targetManualControlParams {
    bool has_targetBrightnessLevel;
    uint32_t targetBrightnessLevel;
/* @@protoc_insertion_point(struct:targetManualControlParams) */
} targetManualControlParams;

typedef struct _targetPowerStateParams {
    bool targetPowerState;
/* @@protoc_insertion_point(struct:targetPowerStateParams) */
} targetPowerStateParams;

typedef struct _targetConfigurations {
    targetPowerStateParams PowerState;
    targetControlPolicy ControlPolicy;
    bool has_AutoTimerParams;
    targetAutoTimerParams AutoTimerParams;
    bool has_AutoLuxParams;
    targetAutoLuxParams AutoLuxParams;
/* @@protoc_insertion_point(struct:targetConfigurations) */
} targetConfigurations;

/* Default values for struct fields */

/* Initializer values for message structs */
#define targetPowerStateParams_init_default      {0}
#define targetControlPolicy_init_default         {(_controlPolicy)0}
#define targetManualControlParams_init_default   {false, 0}
#define targetAutoTimerParams_init_default       {false, 0, false, 0}
#define targetAutoLuxParams_init_default         {false, 0, false, 0}
#define targetConfigurations_init_default        {targetPowerStateParams_init_default, targetControlPolicy_init_default, false, targetAutoTimerParams_init_default, false, targetAutoLuxParams_init_default}
#define targetPowerStateParams_init_zero         {0}
#define targetControlPolicy_init_zero            {(_controlPolicy)0}
#define targetManualControlParams_init_zero      {false, 0}
#define targetAutoTimerParams_init_zero          {false, 0, false, 0}
#define targetAutoLuxParams_init_zero            {false, 0, false, 0}
#define targetConfigurations_init_zero           {targetPowerStateParams_init_zero, targetControlPolicy_init_zero, false, targetAutoTimerParams_init_zero, false, targetAutoLuxParams_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define targetAutoLuxParams_targetOnLux_tag      6
#define targetAutoLuxParams_targetOffLux_tag     7
#define targetAutoTimerParams_targetOnTime_tag   4
#define targetAutoTimerParams_targetOffTime_tag  5
#define targetControlPolicy_controlPolicy_tag    2
#define targetManualControlParams_targetBrightnessLevel_tag 3
#define targetPowerStateParams_targetPowerState_tag 2
#define targetConfigurations_PowerState_tag      1
#define targetConfigurations_ControlPolicy_tag   2
#define targetConfigurations_AutoTimerParams_tag 3
#define targetConfigurations_AutoLuxParams_tag   4

/* Struct field encoding specification for nanopb */
extern const pb_field_t targetPowerStateParams_fields[2];
extern const pb_field_t targetControlPolicy_fields[2];
extern const pb_field_t targetManualControlParams_fields[2];
extern const pb_field_t targetAutoTimerParams_fields[3];
extern const pb_field_t targetAutoLuxParams_fields[3];
extern const pb_field_t targetConfigurations_fields[5];

/* Maximum encoded size of messages (where known) */
#define targetPowerStateParams_size              2
#define targetControlPolicy_size                 2
#define targetManualControlParams_size           6
#define targetAutoTimerParams_size               22
#define targetAutoLuxParams_size                 12
#define targetConfigurations_size                46

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ACTUATED_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
