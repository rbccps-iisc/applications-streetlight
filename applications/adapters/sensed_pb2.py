# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sensed.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sensed.proto',
  package='',
  serialized_pb=_b('\n\x0csensed.proto\"\xb0\x01\n\rsensor_values\x12\x1b\n\x13\x64\x61taSamplingInstant\x18\x01 \x02(\x05\x12\x17\n\x0f\x63\x61seTemperature\x18\x02 \x01(\x05\x12\x18\n\x10powerConsumption\x18\x03 \x01(\x05\x12\x11\n\tluxOutput\x18\x04 \x01(\x05\x12\x12\n\nambientLux\x18\x05 \x01(\x05\x12\x14\n\x0c\x62\x61tteryLevel\x18\x06 \x01(\x05\x12\x12\n\nslaveAlive\x18\x07 \x01(\x08')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SENSOR_VALUES = _descriptor.Descriptor(
  name='sensor_values',
  full_name='sensor_values',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataSamplingInstant', full_name='sensor_values.dataSamplingInstant', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='caseTemperature', full_name='sensor_values.caseTemperature', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='powerConsumption', full_name='sensor_values.powerConsumption', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='luxOutput', full_name='sensor_values.luxOutput', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ambientLux', full_name='sensor_values.ambientLux', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='batteryLevel', full_name='sensor_values.batteryLevel', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='slaveAlive', full_name='sensor_values.slaveAlive', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17,
  serialized_end=193,
)

DESCRIPTOR.message_types_by_name['sensor_values'] = _SENSOR_VALUES

sensor_values = _reflection.GeneratedProtocolMessageType('sensor_values', (_message.Message,), dict(
  DESCRIPTOR = _SENSOR_VALUES,
  __module__ = 'sensed_pb2'
  # @@protoc_insertion_point(class_scope:sensor_values)
  ))
_sym_db.RegisterMessage(sensor_values)


# @@protoc_insertion_point(module_scope)
